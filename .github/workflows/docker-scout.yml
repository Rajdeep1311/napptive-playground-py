name: Docker Scout
# Ref: https://itnext.io/docker-image-scan-github-action-27b2ea322740

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

env:
  DOCKER_IMAGE_TAG: ${{ github.ref == 'refs/heads/master' && 'prod-' || 'dev-' }}${{ github.sha }}
  GITHUB_REGISTRY: ghcr.io
  GITHUB_REPOSITORY: ${{ github.repository }}

jobs:
  build:
    name: Push docker images
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Get Version
        id: version
        run: echo "version=v$(cat version)"  >> $GITHUB_OUTPUT

      - name: Login to GitHub CR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./.devcontainer/Dockerfile.prod
          push: true
          tags: ${{ env.GITHUB_REGISTRY }}/${{ env.GITHUB_REPOSITORY }}:${{ env.DOCKER_IMAGE_TAG }}

  docker-scout:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      # required for all workflows
      security-events: write
      contents: read
      packages: read
    needs: [build]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Login to GitHub CR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create CVE report
        uses: docker/scout-action@6f8607869b4cfe009275fd1fb87656af9e3c81c2
        with:
          command: cves
          image: ${{ env.GITHUB_REGISTRY }}/${{ env.GITHUB_REPOSITORY }}:${{ env.DOCKER_IMAGE_TAG }}
          args: "--output image.sarif.json --format sarif"
          user: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          registry_user: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
      
      # - name: Cat sarif
      #   run: cat image.sarif.json

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        continue-on-error: true
        with:
          sarif_file: image.sarif.json
      
      - name: Scan Vulnerabilities
        run: |
          cat image.sarif.json | \
          jq '{ critical: [select(.runs[-1].results[].message.text  | contains(": CRITICAL"))] | length, high: [select(.runs[-1].results[].message.text  | contains(": HIGH"))] | length, medium: [select(.runs[-1].results[].message.text  | contains(": MEDIUM"))] | length, low: [select(.runs[-1].results[].message.text  | contains(": LOW"))] | length }' > \
          vulnerabilities.json
      
      - name: GH Actions Sumary
        shell: python
        run: |
          import json
          import os


          css_vulnerabilities = "\
          display: flex;\
          flex-flow: row wrap;\
          -webkit-box-pack: end;\
          height: 20px;\
          white-space: normal;\
          overflow: hidden;"

          css_severity = "\
          width: 48px;\
          height: 20px;\
          display: inline-flex;\
          -webkit-box-pack: center;\
          justify-content: center;\
          -webkit-box-align: center;\
          align-items: center;\
          white-space: pre;\
          border-radius: 3px;\
          gap: 4px;\
          padding: 4px 0px;\
          font-size: 12px;\
          cursor: default;\
          color: rgb(255, 218, 216);\
          margin: 0px 0px 0px 4px;"

          css_critical = "background-color: rgb(171, 26, 26);"

          css_high = "background-color: rgb(206, 80, 25);"

          css_medium = "background-color: rgb(214, 128, 0);"

          css_low = "background-color: rgb(136, 135, 158);"

          with open("vulnerabilities.json") as fh:
              vulnerabilities = json.load(fh)

          critical = vulnerabilities.get("critical", 0)
          high = vulnerabilities.get("high", 0)
          medium = vulnerabilities.get("medium", 0)
          low = vulnerabilities.get("low", 0)

          HTML = f"""
          <div style="{css_vulnerabilities}">
              <div style="{css_severity}{css_critical}" >
                  <strong>{critical}</strong> <span>C</span>
              </div>
              <div style="{css_severity}{css_high}" >
                  <strong>{high}</strong> <span>H</span>
              </div>
              <div style="{css_severity}{css_medium}" >
                  <strong>{medium}</strong> <span>M</span>
              </div>
              <div style="{css_severity}{css_low}" >
                  <strong>{low}</strong> <span>L</span>
              </div>
          </div>
          """

          with open(os.environ["GITHUB_STEP_SUMMARY"], "a") as fh:
              print("# Vulnerabilities", file=fh)
              print(HTML, file=fh, end="")
